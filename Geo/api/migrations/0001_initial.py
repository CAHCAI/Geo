# Generated by Django 4.2.16 on 2025-03-27 02:42

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminErrors',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('error_code', models.IntegerField()),
                ('error_description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('revoked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AssemblyDistrict',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('district_number', models.IntegerField()),
                ('area', models.FloatField()),
                ('members', models.IntegerField(blank=True, null=True)),
                ('population', models.IntegerField()),
                ('cvap_19', models.IntegerField()),
                ('hsp_cvap_1', models.IntegerField()),
                ('doj_nh_blk', models.IntegerField()),
                ('doj_nh_asn', models.IntegerField()),
                ('nh_wht_cva', models.IntegerField()),
                ('ideal_value', models.FloatField()),
                ('deviation', models.FloatField()),
                ('f_deviatio', models.FloatField()),
                ('f_cvap_19', models.FloatField()),
                ('f_hsp_cvap', models.FloatField()),
                ('f_doj_nh_b', models.FloatField()),
                ('f_doj_nh_a', models.FloatField()),
                ('f_nh_wht_c', models.FloatField()),
                ('district_n', models.IntegerField(null=True)),
                ('district_label', models.CharField(blank=True, max_length=50, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='CongressionalDistrict',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('district_number', models.IntegerField()),
                ('area', models.FloatField()),
                ('members', models.IntegerField(blank=True, null=True)),
                ('population', models.IntegerField()),
                ('cvap_19', models.IntegerField()),
                ('hsp_cvap_1', models.IntegerField()),
                ('doj_nh_blk', models.IntegerField()),
                ('doj_nh_asn', models.IntegerField()),
                ('nh_wht_cva', models.IntegerField()),
                ('ideal_value', models.FloatField()),
                ('deviation', models.FloatField()),
                ('f_deviatio', models.FloatField()),
                ('multiple_f', models.CharField(blank=True, max_length=50, null=True)),
                ('f_cvap_19', models.FloatField()),
                ('f_hsp_cvap', models.FloatField()),
                ('f_doj_nh_b', models.FloatField()),
                ('f_doj_nh_a', models.FloatField()),
                ('f_nh_wht_c', models.FloatField()),
                ('district_label', models.CharField(blank=True, max_length=50, null=True)),
                ('district_n', models.IntegerField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='HealthServiceArea',
            fields=[
                ('count', models.IntegerField()),
                ('hsa_number', models.IntegerField(primary_key=True, serialize=False)),
                ('hsa_code', models.CharField(max_length=5)),
                ('hsa_name', models.CharField(max_length=50)),
                ('area_sqmi', models.FloatField()),
                ('pop2000', models.FloatField()),
                ('popdensity', models.FloatField()),
                ('shape_star', models.FloatField()),
                ('shape_stle', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='HPSA_DentalHealthShortageArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hpsa_name', models.CharField(blank=True, max_length=255, null=True)),
                ('hpsa_id', models.CharField(blank=True, max_length=50, null=True)),
                ('designation_type', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_discipline_class', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_score', models.IntegerField(blank=True, null=True)),
                ('primary_state_abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('hpsa_status', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_designation_date', models.DateField(blank=True, null=True)),
                ('hpsa_designation_last_update_date', models.DateField(blank=True, null=True)),
                ('metropolitan_indicator', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_geography_id', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_degree_of_shortage', models.CharField(blank=True, max_length=50, null=True)),
                ('withdrawn_date', models.DateField(blank=True, null=True)),
                ('hpsa_fte', models.FloatField(blank=True, null=True)),
                ('hpsa_designation_population', models.IntegerField(blank=True, null=True)),
                ('percent_population_below_poverty', models.FloatField(blank=True, null=True)),
                ('hpsa_formal_ratio', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_population_type', models.CharField(blank=True, max_length=100, null=True)),
                ('rural_status', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('common_county_name', models.CharField(blank=True, max_length=100, null=True)),
                ('common_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('common_state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('county_equivalent_name', models.CharField(blank=True, max_length=100, null=True)),
                ('provider_type', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_provider_ratio_goal', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_resident_civilian_population', models.IntegerField(blank=True, null=True)),
                ('hpsa_shortage', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_status_code', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_type_code', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_withdrawn_date_string', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_state_fips_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state_fips_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('us_mexico_border_100km_indicator', models.CharField(blank=True, max_length=10, null=True)),
                ('us_mexico_border_county_indicator', models.CharField(blank=True, max_length=10, null=True)),
                ('data_warehouse_record_create_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HPSA_MentalHealthShortageArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hpsa_name', models.CharField(blank=True, max_length=255, null=True)),
                ('hpsa_id', models.CharField(blank=True, max_length=50, null=True)),
                ('designation_type', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_discipline_class', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_score', models.IntegerField(blank=True, null=True)),
                ('primary_state_abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('hpsa_status', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_designation_date', models.DateField(blank=True, null=True)),
                ('hpsa_designation_last_update_date', models.DateField(blank=True, null=True)),
                ('metropolitan_indicator', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_geography_id', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_degree_of_shortage', models.CharField(blank=True, max_length=50, null=True)),
                ('withdrawn_date', models.DateField(blank=True, null=True)),
                ('hpsa_fte', models.FloatField(blank=True, null=True)),
                ('hpsa_designation_population', models.IntegerField(blank=True, null=True)),
                ('percent_population_below_poverty', models.FloatField(blank=True, null=True)),
                ('hpsa_formal_ratio', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_population_type', models.CharField(blank=True, max_length=100, null=True)),
                ('rural_status', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('common_county_name', models.CharField(blank=True, max_length=100, null=True)),
                ('common_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('common_state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('county_equivalent_name', models.CharField(blank=True, max_length=100, null=True)),
                ('provider_type', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_provider_ratio_goal', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_resident_civilian_population', models.IntegerField(blank=True, null=True)),
                ('hpsa_shortage', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_status_code', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_type_code', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_withdrawn_date_string', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_state_fips_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state_fips_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('us_mexico_border_100km_indicator', models.CharField(blank=True, max_length=10, null=True)),
                ('us_mexico_border_county_indicator', models.CharField(blank=True, max_length=10, null=True)),
                ('data_warehouse_record_create_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HPSA_PrimaryCareShortageArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hpsa_name', models.CharField(blank=True, max_length=255, null=True)),
                ('hpsa_id', models.CharField(blank=True, max_length=50, null=True)),
                ('designation_type', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_discipline_class', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_score', models.IntegerField(blank=True, null=True)),
                ('primary_state_abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('hpsa_status', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_designation_date', models.DateField(blank=True, null=True)),
                ('hpsa_designation_last_update_date', models.DateField(blank=True, null=True)),
                ('metropolitan_indicator', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_geography_id', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_degree_of_shortage', models.CharField(blank=True, max_length=50, null=True)),
                ('withdrawn_date', models.DateField(blank=True, null=True)),
                ('hpsa_fte', models.FloatField(blank=True, null=True)),
                ('hpsa_designation_population', models.IntegerField(blank=True, null=True)),
                ('percent_population_below_poverty', models.FloatField(blank=True, null=True)),
                ('hpsa_formal_ratio', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_population_type', models.CharField(blank=True, max_length=100, null=True)),
                ('rural_status', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('common_county_name', models.CharField(blank=True, max_length=100, null=True)),
                ('common_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('common_state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('county_equivalent_name', models.CharField(blank=True, max_length=100, null=True)),
                ('provider_type', models.CharField(blank=True, max_length=100, null=True)),
                ('hpsa_provider_ratio_goal', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_resident_civilian_population', models.IntegerField(blank=True, null=True)),
                ('hpsa_shortage', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_status_code', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_type_code', models.CharField(blank=True, max_length=50, null=True)),
                ('hpsa_withdrawn_date_string', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_state_fips_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state_fips_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state_name', models.CharField(blank=True, max_length=100, null=True)),
                ('us_mexico_border_100km_indicator', models.CharField(blank=True, max_length=10, null=True)),
                ('us_mexico_border_county_indicator', models.CharField(blank=True, max_length=10, null=True)),
                ('data_warehouse_record_create_date', models.DateField(blank=True, null=True)),
                ('pc_mcta_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LAServicePlanningArea',
            fields=[
                ('spa', models.IntegerField(primary_key=True, serialize=False)),
                ('spa_num', models.CharField(max_length=10)),
                ('spa_name', models.CharField(max_length=25)),
                ('shape_star', models.FloatField()),
                ('shape_stle', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalServiceStudyArea',
            fields=[
                ('fid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('statefp', models.CharField(max_length=10)),
                ('countyfp', models.CharField(max_length=10)),
                ('county_nm', models.CharField(max_length=100)),
                ('tractce', models.CharField(max_length=20)),
                ('geoid', models.CharField(max_length=50)),
                ('aland', models.FloatField()),
                ('awater', models.FloatField()),
                ('asqmi', models.FloatField()),
                ('intptlat', models.FloatField()),
                ('intptlon', models.FloatField()),
                ('mssaid', models.CharField(max_length=20, null=True)),
                ('mssanm', models.CharField(max_length=400, null=True)),
                ('definition', models.CharField(max_length=20, null=True)),
                ('totalpovpo', models.BigIntegerField()),
                ('shape_area', models.FloatField()),
                ('shape_len', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='OverrideLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryCareShortageArea',
            fields=[
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('objectid', models.IntegerField()),
                ('unit_count', models.IntegerField()),
                ('cnty_fips', models.CharField(max_length=10)),
                ('mssa_id', models.CharField(max_length=10)),
                ('definition', models.CharField(max_length=25)),
                ('area_sqmi', models.FloatField()),
                ('mssa_count', models.CharField(max_length=40)),
                ('mssa_name', models.CharField(max_length=200)),
                ('total_popu', models.IntegerField()),
                ('est_physic', models.FloatField()),
                ('est_fnppa', models.FloatField()),
                ('est_provid', models.FloatField()),
                ('provider_r', models.FloatField()),
                ('score_prov', models.IntegerField()),
                ('pop_fpl', models.IntegerField()),
                ('pct_fpl', models.FloatField()),
                ('score_pove', models.IntegerField()),
                ('score_tota', models.IntegerField()),
                ('pcsa', models.CharField(max_length=5)),
                ('effective', models.DateField()),
                ('shape_are', models.FloatField()),
                ('shape_len', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredNurseShortageArea',
            fields=[
                ('rn_area_id', models.IntegerField(primary_key=True, serialize=False)),
                ('trial_rn_a', models.IntegerField()),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('rn_area_na', models.CharField(max_length=100)),
                ('population', models.IntegerField()),
                ('rn_lic', models.IntegerField()),
                ('rm_emprate', models.FloatField()),
                ('employed_r', models.IntegerField()),
                ('ratio', models.FloatField()),
                ('target_rat', models.IntegerField()),
                ('rnsa', models.CharField(max_length=5)),
                ('severity', models.CharField(max_length=10, null=True)),
                ('effective', models.DateField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='SenateDistrict',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('district_number', models.IntegerField()),
                ('area', models.FloatField()),
                ('members', models.IntegerField(blank=True, null=True)),
                ('population', models.IntegerField()),
                ('cvap_19', models.IntegerField()),
                ('hsp_cvap_1', models.IntegerField()),
                ('doj_nh_ind', models.IntegerField(null=True)),
                ('doj_nh_blk', models.IntegerField()),
                ('doj_nh_asn', models.IntegerField()),
                ('nh_wht_c', models.IntegerField()),
                ('ideal_value', models.FloatField()),
                ('deviation', models.FloatField()),
                ('f_deviation', models.FloatField()),
                ('f_cvap_19', models.FloatField()),
                ('f_hsp_cvap_1', models.FloatField()),
                ('f_doj_nh_b', models.FloatField()),
                ('f_doj_nh_a', models.FloatField()),
                ('f_nh_wht_c', models.FloatField()),
                ('district_label', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_f', models.CharField(blank=True, max_length=50, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='VisitorTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_id', models.CharField(max_length=255, unique=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
        ),
    ]
